import{_ as i,c as s,o as l,ag as t}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"管理操作 API","description":"","frontmatter":{},"headers":[],"relativePath":"api/admin.md","filePath":"api/admin.md","lastUpdated":1742547745000}'),e={name:"api/admin.md"};function n(h,a,o,r,d,p){return l(),s("div",null,a[0]||(a[0]=[t(`<h1 id="管理操作-api" tabindex="-1">管理操作 API <a class="header-anchor" href="#管理操作-api" aria-label="Permalink to &quot;管理操作 API&quot;">​</a></h1><p>管理操作 API 提供了执行各种管理任务的接口，如重试失败邮件、手动清理队列等。这些接口需要更高的权限，默认只接受本地连接。</p><h2 id="重试失败邮件" tabindex="-1">重试失败邮件 <a class="header-anchor" href="#重试失败邮件" aria-label="Permalink to &quot;重试失败邮件&quot;">​</a></h2><h3 id="端点信息" tabindex="-1">端点信息 <a class="header-anchor" href="#端点信息" aria-label="Permalink to &quot;端点信息&quot;">​</a></h3><ul><li><strong>URL</strong>: <code>/admin/retry-failed</code></li><li><strong>方法</strong>: POST</li><li><strong>权限</strong>: 仅本地连接</li></ul><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p>触发一个后台任务，尝试重新发送之前发送失败的邮件。这些邮件存储在 <code>emails/failed</code> 目录中。</p><h3 id="请求参数" tabindex="-1">请求参数 <a class="header-anchor" href="#请求参数" aria-label="Permalink to &quot;请求参数&quot;">​</a></h3><p>无需请求参数。</p><h3 id="响应格式" tabindex="-1">响应格式 <a class="header-anchor" href="#响应格式" aria-label="Permalink to &quot;响应格式&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ok&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;已开始处理失败邮件&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8025/admin/retry-failed</span></span></code></pre></div><h2 id="计划中的管理-api" tabindex="-1">计划中的管理 API <a class="header-anchor" href="#计划中的管理-api" aria-label="Permalink to &quot;计划中的管理 API&quot;">​</a></h2><p>以下管理 API 功能目前尚未实现，但已计划在未来版本中添加：</p><h3 id="清理队列" tabindex="-1">清理队列 <a class="header-anchor" href="#清理队列" aria-label="Permalink to &quot;清理队列&quot;">​</a></h3><ul><li><strong>URL</strong>: <code>/admin/clean-queue</code></li><li><strong>方法</strong>: POST</li><li><strong>功能</strong>: 清理邮件队列中的所有待处理邮件</li></ul><h3 id="清理旧邮件" tabindex="-1">清理旧邮件 <a class="header-anchor" href="#清理旧邮件" aria-label="Permalink to &quot;清理旧邮件&quot;">​</a></h3><ul><li><strong>URL</strong>: <code>/admin/clean-old-emails</code></li><li><strong>方法</strong>: POST</li><li><strong>功能</strong>: 清理超过一定天数的已处理邮件</li></ul><h3 id="更新配置" tabindex="-1">更新配置 <a class="header-anchor" href="#更新配置" aria-label="Permalink to &quot;更新配置&quot;">​</a></h3><ul><li><strong>URL</strong>: <code>/admin/config</code></li><li><strong>方法</strong>: GET/POST</li><li><strong>功能</strong>: 获取或更新运行时配置，无需重启服务</li></ul><h3 id="服务控制" tabindex="-1">服务控制 <a class="header-anchor" href="#服务控制" aria-label="Permalink to &quot;服务控制&quot;">​</a></h3><ul><li><strong>URL</strong>: <code>/admin/service</code></li><li><strong>方法</strong>: POST</li><li><strong>功能</strong>: 控制服务状态（暂停/恢复发送）</li></ul><h2 id="安全考虑" tabindex="-1">安全考虑 <a class="header-anchor" href="#安全考虑" aria-label="Permalink to &quot;安全考虑&quot;">​</a></h2><p>由于管理 API 具有执行关键操作的能力，请注意以下安全措施：</p><ol><li><strong>确保仅本地访问</strong>：管理 API 默认只接受来自 <code>127.0.0.1</code> 和 <code>localhost</code> 的连接</li><li><strong>使用反向代理添加认证</strong>：如果需要远程访问，建议设置反向代理并添加额外的认证</li><li><strong>限制 API 访问频率</strong>：避免过于频繁地调用这些 API，特别是重试失败邮件的功能</li></ol><h2 id="使用-webhook-触发管理操作" tabindex="-1">使用 Webhook 触发管理操作 <a class="header-anchor" href="#使用-webhook-触发管理操作" aria-label="Permalink to &quot;使用 Webhook 触发管理操作&quot;">​</a></h2><p>对于需要定期执行的管理任务，可以设置定时作业调用相应的 API。例如，使用 cron 定期触发失败邮件重试：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每小时重试一次失败邮件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8025/admin/retry-failed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 每天凌晨2点清理旧邮件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8025/admin/clean-old-emails</span></span></code></pre></div><h2 id="日志和审计" tabindex="-1">日志和审计 <a class="header-anchor" href="#日志和审计" aria-label="Permalink to &quot;日志和审计&quot;">​</a></h2><p>所有管理 API 的调用都会记录在服务日志中，包括：</p><ul><li>操作时间</li><li>操作类型</li><li>操作结果</li><li>请求来源 IP</li></ul><p>这些日志信息对于安全审计和故障排查非常重要。可以通过查看服务的标准输出或日志文件访问这些记录。</p>`,33)]))}const g=i(e,[["render",n]]);export{c as __pageData,g as default};
